#pragma once

// @generated by torchgen/gen.py from NativeFunction.h

#include <c10/core/Scalar.h>
#include <c10/core/Storage.h>
#include <c10/core/TensorOptions.h>
#include <c10/util/Deprecated.h>
#include <c10/util/Optional.h>
#include <c10/core/QScheme.h>
#include <ATen/core/Reduction.h>
#include <ATen/core/Tensor.h>
#include <tuple>
#include <vector>
#include <ATen/ops/_linalg_solve_meta.h>

namespace at {
namespace native {

struct TORCH_API structured__linalg_solve_out : public at::meta::structured__linalg_solve {
void impl(const at::Tensor & A, const at::Tensor & B, bool left, const at::Tensor & result, const at::Tensor & LU, const at::Tensor & pivots);
};

} // namespace native
} // namespace at
